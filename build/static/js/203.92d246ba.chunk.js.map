{"version":3,"file":"static/js/203.92d246ba.chunk.js","mappings":"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","sources":["component/blog/BlogGridOne.js","client.js","pages/BlogGrid.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  FaPlay,\n  FaAngleRight,\n  FaAngleLeft,\n  FaArrowRight,\n  FaArrowLeft,\n} from \"react-icons/fa\";\nimport FsLightbox from \"fslightbox-react\";\nimport Slider from \"react-slick\";\nimport ReactPaginate from \"react-paginate\";\nimport LoaderMythos from \"../loader/LoaderMythos\";\n\nconst BlogGridOne = () => {\n  const [toggler, setToggler] = useState(false);\n  const [blogs, setBlogs] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0);\n  const blogsPerPage = 5;\n  const pageCount = Math.ceil(blogs.length / blogsPerPage);\n  const pageVisited = pageNumber * blogsPerPage;\n  const [isLoading , setisLoading ] = useState(true);\n\n  function decodeHtml(html) {\n    var txt = document.createElement(\"textarea\");\n    txt.innerHTML = html;\n    return txt.value;\n  }\n\n  const slideSettings = {\n    dots: false,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    nextArrow: <FaAngleRight />,\n    prevArrow: <FaAngleLeft />,\n  };\n\n  const fetchMedia = async (mediaId) => {\n    const mediaResponse = await fetch(\n      `https://blogs.mythosmedia.io/wp-json/wp/v2/media/${mediaId}`\n    );\n    return mediaResponse.json();\n  };\n\n  const fetchBlogs = async () => {\n    try {\n      const response = await fetch(\"https://blogs.mythosmedia.io/wp-json/wp/v2/posts?per_page=100\");\n      const data = await response.json();\n      const blogsWithMedia = await Promise.all(\n        data.map(async (post) => {\n          if (post.featured_media > 0) {\n            post.featuredImage = await fetchMedia(post.featured_media);\n          }\n          return post;\n        })\n      );\n      setBlogs(blogsWithMedia);\n    } catch (error) {\n      console.error(\"Error fetching blog posts:\", error);\n    } finally {\n      setisLoading(false);  // Set loading to false after data is fetched or an error occurs\n    }\n  };\n  \n\n  useEffect(() => {\n    fetchBlogs();\n  }, []);\n\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <LoaderMythos />  // Your custom loading component\n      ) : (\n        blogs.slice(pageVisited, pageVisited + blogsPerPage).map((data) => (\n          <div className=\"blog-grid\" key={data.id}>\n            <h3 className=\"title\">\n              <Link to={`/blog-details/${data.slug}`}>\n                {decodeHtml(data.title.rendered)}\n              </Link>\n            </h3>\n            <div className=\"author\">\n              <img loading=\"lazy\" width=\"80\" src={data.authors[0].avatar_url.url || data.authors[0].avatar_url} alt=\"Blog Author\" />\n              <div>\n                <h6 className=\"author-name\">\n                  <Link to={`/team-details/${data.authors[0].slug}`}>{data.authors[0].display_name}</Link>\n                </h6>\n                <ul className=\"blog-meta list-unstyled\">\n                  <li>{new Date(data.date).toLocaleDateString()}</li>\n                  <li>5 min read</li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"post-thumbnail\">\n              {data.featuredImage ? (\n                <img\n                  loading=\"lazy\"\n                  src={data.featuredImage.guid.rendered}\n                  alt={data.title.rendered}\n                />\n              ) : null}\n            </div>\n            <p dangerouslySetInnerHTML={{ __html: data.excerpt.rendered }}></p>\n            <Link\n              className=\"axil-btn btn-borderd btn-large\"\n              to={`/blog-details/${data.slug}`}\n            >\n              Read More\n            </Link>\n            <hr style={{marginTop:'45px'}} />\n          </div>\n        ))\n      )}\n    </>\n  );\n  \n};\n\nexport default BlogGridOne;\n","import client from \"@sanity/client\"\n\nexport default client({\n    projectId: \"c9cfpht3\",\n    dataset: \"production\",\n    useCdn: true,\n    apiVersion: \"2022-03-08\"\n  })","import React, { useEffect, useState } from 'react';\nimport FooterOne from '../common/footer/FooterOne';\nimport HeaderOne from '../common/header/HeaderOne';\nimport CtaLayoutOne from '../component/cta/CtaLayoutOne';\nimport BreadCrumbOne from '../elements/breadcrumb/BreadCrumbOne';\nimport BlogSidebar from '../component/blog/BlogSidebar';\nimport BlogGridOne from '../component/blog/BlogGridOne';\nimport ColorSwitcher from '../elements/switcher/ColorSwitcher';\nimport SEO from '../common/SEO';\nimport client from '../client';\n\n\nconst BlogGridView = () => {\n    const [Blogs, setBlogs] = useState([])\n   \n\n    return (\n        <>\n            <SEO title=\"Blog Grid\" />\n            <ColorSwitcher />\n            <main className=\"main-wrapper\">\n                <HeaderOne />\n                <BreadCrumbOne \n                title=\"Blogs\"\n                page=\"Blog\"\n                />\n                <div className=\"section-padding-equal\">\n                    <div className=\"container\">\n                       <div className=\"row row-40\">\n                            <div className=\"col-lg-8\">\n                                <BlogGridOne />\n                            </div>\n                            <div className=\"col-lg-4\">\n                                <BlogSidebar />\n                            </div>\n                       </div>\n                    </div>\n                </div>\n                <CtaLayoutOne />\n            <FooterOne parentClass=\"\" />\n            </main>\n        </>\n    )\n}\n\nexport default BlogGridView;"],"names":["BlogGridOne","toggler","setToggler","useState","blogs","setBlogs","pageNumber","setPageNumber","pageVisited","Math","ceil","length","isLoading","setisLoading","decodeHtml","html","txt","document","createElement","innerHTML","value","FaAngleRight","FaAngleLeft","fetchBlogs","async","response","fetch","data","json","blogsWithMedia","Promise","all","map","post","featured_media","featuredImage","concat","mediaId","fetchMedia","error","console","useEffect","_jsx","_Fragment","children","LoaderMythos","slice","_jsxs","className","Link","to","slug","title","rendered","loading","width","src","authors","avatar_url","url","alt","display_name","Date","date","toLocaleDateString","guid","dangerouslySetInnerHTML","__html","excerpt","style","marginTop","id","client","projectId","dataset","useCdn","apiVersion","BlogGridView","Blogs","SEO","ColorSwitcher","HeaderOne","BreadCrumbOne","page","BlogSidebar","CtaLayoutOne","FooterOne","parentClass"],"sourceRoot":""}